generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             String     @id @unique
  username       String     @unique @default(cuid()) @db.VarChar(14)
  userType       String
  location       String     @default("None")
  bio            String     @default("User has no info") @db.VarChar(255)
  profilePicture String     @default("defaultPhoto.png")
  isAdmin        Boolean    @default(false)
  displayName    String
  user           Bids[]
  Messages       Messages[]
  client         Projects[] @relation("Client")
  developer      Projects[] @relation("Developer")
}

model Projects {
  id             String  @id @unique @default(cuid()) @db.VarChar(32)
  projectName    String
  category       String
  language       String
  description    String
  clientId       String
  developerId    String?
  projectPicture String? @default("defaultPhoto.png")
  bid            Bids[]
  client         Users   @relation("Client", fields: [clientId], references: [id])
  developer      Users?  @relation("Developer", fields: [developerId], references: [id])
  Task           Task[]
}

model Bids {
  id         String   @id @unique @default(cuid()) @db.VarChar(32)
  bidComment String
  projectId  String
  userId     String
  project    Projects @relation(fields: [projectId], references: [id])
  user       Users    @relation(fields: [userId], references: [id])
}

model Messages {
  id        String      @id @unique @default(cuid()) @db.VarChar(32)
  content   String
  type      MessageType
  projectId String
  senderId  String
  sentTime  DateTime    @default(now())
  Users     Users       @relation(fields: [senderId], references: [id])
}

enum Column {
  BACKLOG
  TODO
  IN_PROGRESS
  DONE
}

model Task {
  id        String   @id @default(cuid())
  projectId String
  column    Column
  title     String
  project   Projects @relation(fields: [projectId], references: [id])
}

enum MessageType {
  text
  photo
}
